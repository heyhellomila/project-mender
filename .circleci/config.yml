version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
  eslint: arrai/eslint@1.3.0
jobs:
  eslint:
    parameters:
      wd:
        type: string
        default: ~/project
        files:
          type: string
          default: lib/**
        executor:
          type: executor
          default: v8
        config:
          description: "Any additional configuration steps."
          type: steps
          default: []
      executor: <<parameters.executor>>
      steps:
        - checkout
        - utils/add_ssh_config
        - run:
            name: Install additional OS packages
            command: sudo apt-get install rsync
        - run:
            name: Install the latest eslint
            command: sudo npm install -g eslint
        - steps: <<parameters.config>>
        - run:
            name: Run eslint
            command: |
              cd <<parameters.wd>>
              eslint --color <<parameters.files>> | tee ~/lint
        - utils/make_status_shield:
            when: on_fail
            status: errors
            color: red
            logo: eslint
        - run:
            name: Check if we had any warnings
            when: always
            command: test ! -s ~/lint
        - utils/make_status_shield:
            when: always
            status: warnings
            color: orange
            logo: eslint
            preserve: true
        - utils/make_status_shield:
            when: on_success
            status: passed
            color: brightgreen
            logo: eslint
        - utils/rsync_file:
            when: always
            file: ~/status.svg
            remote_file: $CIRCLE_BRANCH.$CIRCLE_JOB.svg
            host: docs
  build:
    docker:
      - image: circleci/node:12.9.0
      - image: mongo:4.2.0
      - image: debian:stretch
    working_directory: ~/project-mender

    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@6.12'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run: # run tests
          name: test
          command: npm test
      - run: # run coverage report
          name: code-coverage
          command: 'npm run coverage'
      - store_test_results: # for storing unit test results
          path: test/mochawesome-report
      - store_artifacts:
          path: test/mochawesome-report/mochawesome.json
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: coverage
      - codecov/upload:
          file: coverage/index.html
executors:
  v8:
    environment:
        LANG: en_US.UTF-8
    docker:
     - image: circleci/node:8-buster
  v10:
    environment:
        LANG: en_US.UTF-8
    docker:
     - image: circleci/node:10-buster
  v12:
    environment:
        LANG: en_US.UTF-8
    docker:
     - image: circleci/node:12-buster